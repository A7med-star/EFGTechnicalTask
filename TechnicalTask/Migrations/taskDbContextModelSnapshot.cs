// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TechnicalTask.Data;

#nullable disable

namespace TechnicalTask.Migrations
{
    [DbContext(typeof(taskDbContext))]
    partial class taskDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TechnicalTask.Models.executionsModel", b =>
                {
                    b.Property<int>("ExecutionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExecutionID"));

                    b.Property<long>("InvoiceID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("OperationDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("OrderID")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(20, 6)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVer")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(20, 4)");

                    b.HasKey("ExecutionID");

                    b.HasIndex("InvoiceID");

                    b.HasIndex("OrderID");

                    b.ToTable("Executions");
                });

            modelBuilder.Entity("TechnicalTask.Models.invoicesModel", b =>
                {
                    b.Property<long>("InvoiceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("InvoiceID"));

                    b.Property<DateTime?>("CancellationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CancellationReason")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InvoiceSerial")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsCancelled")
                        .HasColumnType("bit");

                    b.Property<decimal?>("NetAmount")
                        .HasColumnType("decimal(20, 3)");

                    b.Property<long?>("OrderID")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(20, 3)");

                    b.Property<decimal?>("TotalOverHeads")
                        .HasColumnType("decimal(20, 3)");

                    b.Property<int?>("TotalQuantity")
                        .HasColumnType("int");

                    b.HasKey("InvoiceID");

                    b.HasIndex("OrderID");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("TechnicalTask.Models.ordersModel", b =>
                {
                    b.Property<long>("orderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("orderID"));

                    b.Property<string>("companyCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<int>("executedQuantity")
                        .HasColumnType("int");

                    b.Property<short>("marketID")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("orderDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("orderTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(26, 9)");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<byte[]>("rowVer")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("securityID")
                        .HasColumnType("int");

                    b.HasKey("orderID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("TechnicalTask.Models.executionsModel", b =>
                {
                    b.HasOne("TechnicalTask.Models.invoicesModel", "Invoice")
                        .WithMany("Executions")
                        .HasForeignKey("InvoiceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechnicalTask.Models.ordersModel", "Order")
                        .WithMany("Executions")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Invoice");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("TechnicalTask.Models.invoicesModel", b =>
                {
                    b.HasOne("TechnicalTask.Models.ordersModel", "Order")
                        .WithMany("Invoices")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Order");
                });

            modelBuilder.Entity("TechnicalTask.Models.invoicesModel", b =>
                {
                    b.Navigation("Executions");
                });

            modelBuilder.Entity("TechnicalTask.Models.ordersModel", b =>
                {
                    b.Navigation("Executions");

                    b.Navigation("Invoices");
                });
#pragma warning restore 612, 618
        }
    }
}
